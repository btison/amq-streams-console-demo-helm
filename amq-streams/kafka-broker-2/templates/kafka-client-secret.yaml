apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.authentication.clientId }}-client-secret
  {{- if .Values.namespace }}
  namespace: {{ .Values.namespace }}
  {{- end }}
  labels:
    {{- include "kafka-broker-2.labels" . | nindent 4 }}
  annotations:
    {{- include "kafka-broker-2.argocd-syncwave" . | nindent 4 }}
stringData:
  bootstrapServer: {{ include "kafka-broker-2.bootstrapServer" . }}
  securityProtocol: {{ .Values.authentication.client.securityProtocol }}
  saslMechanism: {{ .Values.authentication.client.saslMechanism }}
  clientId: {{ .Values.authentication.client.clientId }}
  clientSecret: {{ .Values.authentication.client.clientSecret }}
  {{- if eq .Values.authentication.saslMechanism "PLAIN" }}
  saslJaasConfig: org.apache.kafka.common.security.plain.PlainLoginModule required username="{{ .Values.authentication.clientId }}" password="{{ .Values.authentication.clientSecret }}";
  {{- end }}
  {{- if eq .Values.authentication.saslMechanism "SCRAM-SHA-512" }}
  saslJaasConfig: org.apache.kafka.common.security.scram.ScramLoginModule required username="{{ .Values.authentication.clientId }}" password="{{ .Values.authentication.clientSecret }}";
  {{- end }}
  prod.kafka.sasl.jaas.config: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required oauth.client.id="{{ .Values.authentication.client.clientId }}" oauth.client.secret="{{ .Values.authentication.client.clientSecret }}" oauth.token.endpoint.uri="{{ .Values.authentication.client.tokenEndpointUri }}" ;
type: Opaque
